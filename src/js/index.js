'use strict';
// Enter your code below:

// ! ========================== 0 ==========================
// Repeta Filter callback function module 4:

const filter = function (array, test) {
  const filteredArray = [];

  for (const element of array) {
    const passed = test(element);

    if (passed) {
      filteredArray.push(element);
    }
  }
  return filteredArray;
};

const callback1 = function (value) {
  return value >= 3;
};

const result1 = filter([1, 2, 3, 4, 5], callback1);
console.log(result1);

const callback2 = function (value) {
  return value <= 4;
};

const result2 = filter([1, 2, 3, 4, 5, 6, 7, 8], callback2);
console.log(result2);

const fruits = [
  { name: 'apples', quantity: 200, isFresh: true },
  { name: 'grapes', quantity: 150, isFresh: false },
  { name: 'bananas', quantity: 100, isFresh: true },
];

const getFruits = function (fruit) {
  return fruit.quantity >= 120;
};

const result3 = filter(fruits, getFruits);
console.log(result3);

// * ========================== 1 ==========================

// function makePizza() {
//   return 'Ваша пицца готовится, ожидайте.';
// }

// const result = makePizza();
// const pointer = makePizza;

// * ========================== 2 ==========================

// function deliverPizza(pizzaName) {
//   return `Доставляем пиццу ${pizzaName}.`;
// }

// function makePizza(pizzaName) {
//   return `Пицца ${pizzaName} готовится, ожидайте...`;
// }

// function makeMessage(pizzaName, callback) {
//   return callback(pizzaName);
// }

// * ========================== 3 ==========================

// function makePizza(pizzaName, callback) {
//   console.log(`Пицца ${pizzaName} готовится, ожидайте...`);
//   callback(pizzaName);
// }

// makePizza('Роял гранд', function deliverPizza(pizzaName) {
//   console.log(`Доставляем пиццу ${pizzaName}.`);
// });

// makePizza('Ультрасыр', function eatPizza(pizzaName) {
//   console.log(`Едим пиццу ${pizzaName}.`);
// });

// * ========================== 4 ==========================

// const pizzaPalace = {
//   pizzas: ['Ультрасыр', 'Аль Копчино', 'Четыре нарезона'],
//   order(pizzaName, onSuccess, onError) {
//     if (this.pizzas.includes(pizzaName)) {
//       return onSuccess(pizzaName);
//     }
//     return onError(`В ассортименте нет пиццы с названием ${pizzaName}.`);
//   },
// };

//  ! Колбэк для onSuccess
// function makePizza(pizzaName) {
//   return `Ваш заказ принят. Готовим пиццу ${pizzaName}.`;
// }

//  ! Колбэк для onError
// function onOrderError(error) {
//   return `Ошибка! ${error}`;
// }

//  ! Вызовы метода с колбэками
// pizzaPalace.order('Аль Копчино', makePizza, onOrderError);
// pizzaPalace.order('Четыре нарезона', makePizza, onOrderError);
// pizzaPalace.order('Биг майк', makePizza, onOrderError);
// pizzaPalace.order('Венская', makePizza, onOrderError);

// * ========================== 5 ==========================

// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
// * ========================== 1 ==========================
